version: 2.1

orbs:
  silta: silta/silta@0.1

executors:
  cicd81:
    docker:
      - image: wunderio/silta-cicd:circleci-php8.1-node16-composer2-v0.1
    resource_class: small
commands:
  npm-install-build:
    description: "NPM build command."
    parameters:
      path:
        description: "package.json path"
        type: string
        default: "."
      install-command:
        type: string
        default: "npm install"
      build-command:
        description: "NPM build command."
        type: string
        default: "npm run build"
      cache-version:
        description: "CircleCI cache key prefix."
        type: string
        default: "v1.2"
      npm-config-platform:
        description: "Platform flag for npm install"
        type: string
        default: "linuxmusl"
    steps:
      - restore_cache:
          keys:
            - <<parameters.cache-version>>-npm-{{ checksum "<<parameters.path>>/package-lock.json" }}
            - <<parameters.cache-version>>-npm-

      - run:
          name: Install frontend dependencies
          environment:
            npm_config_platform: <<parameters.npm-config-platform>>
          command: |
            cd '<<parameters.path>>'
            <<parameters.install-command>>

      - run:
          name: Build frontend
          command: |
            cd '<<parameters.path>>'
            <<parameters.build-command>>

      - save_cache:
          paths:
            - <<parameters.path>>/node_modules
            - <<parameters.path>>/.next/cache
          key: <<parameters.cache-version>>-npm-{{ checksum "<<parameters.path>>/package-lock.json" }}


workflows:
  commit:
    jobs:
      - silta/drupal-validate:
          name: validate
          executor: cicd81
          drupal-root: "drupal"
          web-root: "web"
          pre-validation:
            - run:
                name: Link files for validation
                command: | 
                  ln -s ../silta .
                  ln -s ../.dockerignore .
          post-validation:
            - run: echo "You can add additional validation here!"

      - silta/analyze:
          name: analyze
          context: analyze
          sources: drupal/web

      - silta/drupal-build-deploy: &build-deploy
          name: Drupal build & deploy
          executor: cicd81
          drupal-root: drupal
          pre-release:
            - silta/build-docker-image:
                dockerfile: silta/elasticsearch.Dockerfile
                tag: with-icu-analysis
                identifier: elasticsearch
                expose_image: false
          codebase-build:
            - run:
                name: Set environment variables
                command: |
                  cp -r ~/project/silta ~/project/drupal/
                  release_name_next=`silta ci release name --release-suffix next`
                  
                  # If name is too long, truncate it and append a hash
                  if [ ${#release_name_next} -ge 33 ]; then
                    release_name_next="$(printf "$release_name_next" | cut -c 1-30)$(printf "$release_name_next" | shasum -a 256 | cut -c 1-3 )"
                  fi
                  next_domain=${release_name_next}.$CIRCLE_PROJECT_REPONAME.$CLUSTER_DOMAIN
                  sed -i -e "s/<|next_domain|>/$next_domain/" silta/silta.yml
                  sed -i -e "s/<|drupal_admin_pwd|>/$DRUPAL_ADMIN_PWD/" silta/silta.yml
                  openssl genpkey -algorithm RSA -pkeyopt rsa_keygen_bits:4096 -out keypair.pem
                  openssl pkey -in keypair.pem -out oauth/private.key
                  openssl pkey -in keypair.pem -pubout -out oauth/public.key
                  chmod 600 oauth/private.key oauth/public.key
            - silta/drupal-composer-install
            - silta/npm-install-build
          context: silta_dev
          filters:
            branches:
              ignore:
                - main
                - production
                - /dependabot\/.*/

      - silta/drupal-build-deploy:
          # Extend the build-deploy configuration for the main environment.
          <<: *build-deploy
          name: Drupal build & deploy main
          silta_config: silta/silta.yml,silta/silta-main.yml
          context: silta_dev
          filters:
            branches:
              only: main

      - silta/drupal-build-deploy:
          # Extend the build-deploy configuration for the production environment.
          <<: *build-deploy
          name: Drupal build & deploy production
          silta_config: silta/silta.yml,silta/silta-prod.yml
          context: silta_finland
          filters:
            branches:
              only: production
          # Special rules for deploybot branches.
      - silta/drupal-build-deploy:
          <<: *build-deploy
          name: Drupal build dependabot 
          context: silta_dev
          skip-deployment: true
          filters:
            branches:
              only: /dependabot\/.*/

      # Storybook deployment.
      - silta/simple-build-deploy: &build-deploy
          name: Storybook build & deploy
          executor: cicd81
          context: silta_dev
          silta_config: silta/silta-storybook.yml
          release-suffix: storybook
          codebase-build:
            - silta/npm-install-build:
                build-command: npm run build-storybook
                path: next
          build_folder: next/storybook-static
          filters:
            branches:
              ignore:
                - production
                - /dependabot\/.*/

      # silta/frontend-build-deploy is defined here https://github.com/wunderio/silta-circleci/blob/master/orb/jobs/%40frontend.yml
      # &build-deploy is a yaml anchor, so we can reference it later
      - silta/frontend-build-deploy: &frontend-build-deploy
          name: Next build & deploy
          context: silta_dev
          executor: cicd81
          silta_config: silta/silta-next.yml
          release-suffix: next
          codebase-build:
            # npm-install-build command is defined here https://github.com/wunderio/silta-circleci/blob/master/orb/commands/@npm.yml
            - run:
                name: Set environment variables 
                command: |
                  release_name=`silta ci release name`
                  release_name_next=`silta ci release name --release-suffix next`

                  # If name is too long, truncate it and append a hash
                  if [ ${#release_name} -ge 33 ]; then
                    release_name="$(printf "$release_name" | cut -c 1-30)$(printf "$release_name" | shasum -a 256 | cut -c 1-3 )"
                  fi
                  # If name is too long, truncate it and append a hash
                  if [ ${#release_name_next} -ge 33 ]; then
                    release_name_next="$(printf "$release_name_next" | cut -c 1-30)$(printf "$release_name_next" | shasum -a 256 | cut -c 1-3 )"
                  fi
                  drupal_domain=${release_name}.$CIRCLE_PROJECT_REPONAME.$CLUSTER_DOMAIN
                  drupal_public_base_url=https://${drupal_domain}
                  next_domain=${release_name_next}.$CIRCLE_PROJECT_REPONAME.$CLUSTER_DOMAIN
                  next_public_base_url=https://${next_domain}
                  drupal_client_secret=drupal_client_secret_not_secure_used_only_locally
                  drupal_client_id=drupal-client-id
                  nextauth_secret=next_auth_secret_not_secure_used_only_locally
                  drupal_revalidate_secret=revalidate_secret_not_secure_used_only_locally
                  echo "export NEXT_PUBLIC_DRUPAL_BASE_URL=${drupal_public_base_url}" >> "$BASH_ENV"
                  echo "export NEXT_IMAGE_DOMAIN=${drupal_domain}" >> "$BASH_ENV"
                  echo "export DRUPAL_CLIENT_SECRET=${drupal_client_secret}" >> "$BASH_ENV"
                  echo "export DRUPAL_CLIENT_ID=${drupal_client_id}" >> "$BASH_ENV"
                  echo "export NEXTAUTH_SECRET=${nextauth_secret}" >> "$BASH_ENV"
                  echo "export NEXT_PUBLIC_FRONTEND_URL=${next_public_base_url}" >> "$BASH_ENV"
                  echo "export DRUPAL_REVALIDATE_SECRET=${drupal_revalidate_secret}" >> "$BASH_ENV"
                  escaped_drupal_public_base_url=$(printf '%s\n' "$drupal_public_base_url" | sed -e 's/[\/&]/\\&/g')
                  escaped_next_public_base_url=$(printf '%s\n' "$next_public_base_url" | sed -e 's/[\/&]/\\&/g')
                  escaped_drupal_client_secret=$(printf '%s\n' "$drupal_client_secret" | sed -e 's/[\/&]/\\&/g')
                  escaped_drupal_revalidate_secret=$(printf '%s\n' "$drupal_revalidate_secret" | sed -e 's/[\/&]/\\&/g')
                  escaped_nextauth_secret=$(printf '%s\n' "$nextauth_secret" | sed -e 's/[\/&]/\\&/g')
                  sed -i -e "s/<|next_public_base_url|>/$escaped_next_public_base_url/" silta/silta-next.yml
                  sed -i -e "s/<|drupal_public_base_url|>/$escaped_drupal_public_base_url/" silta/silta-next.yml
                  sed -i -e "s/<|next_image_domain|>/$drupal_domain/" silta/silta-next.yml
                  sed -i -e "s/<|drupal_client_secret|>/$escaped_drupal_client_secret/" silta/silta-next.yml
                  sed -i -e "s/<|drupal_revalidate_secret|>/$escaped_drupal_revalidate_secret/" silta/silta-next.yml
                  sed -i -e "s/<|nextauth_secret|>/$escaped_nextauth_secret/" silta/silta-next.yml
                  sed -i -e "s/<|nextauth_url|>/$escaped_next_public_base_url/" silta/silta-next.yml
                  sed -i -e "s/<|next_public_frontend_url|>/$escaped_next_public_base_url/" silta/silta-next.yml

            # uses local custom command instead of silta/npm-install-build until SLT-847 is implemented
            - npm-install-build:
                path: next
          image_build_steps:
            - silta/build-docker-image:
                dockerfile: 'silta/node.Dockerfile'
                path: './next'
                identifier: 'node'
                docker-hash-prefix: v1
          filters:
            branches:
              ignore:
                - main
                - production
                - /dependabot\/.*/
          requires: [ Drupal build & deploy ]

      - silta/frontend-build-deploy:
          # Extend the build-deploy configuration for the main environment.
          <<: *frontend-build-deploy
          name: Next build & deploy main
          context: silta_dev
          silta_config: silta/silta-next.yml,silta/silta-next-main.yml
          codebase-build:
            # npm-install-build command is defined here https://github.com/wunderio/silta-circleci/blob/master/orb/commands/@npm.yml
            - run:
                name: Set environment variables 
                command: |
                  drupal_domain=cms.next4drupal.dev.wdr.io
                  drupal_public_base_url=https://${drupal_domain}
                  next_domain=next4drupal.dev.wdr.io
                  next_public_base_url=https://${next_domain}
                  drupal_client_secret=drupal_client_secret_not_secure_used_only_locally
                  drupal_client_id=drupal-client-id
                  drupal_revalidate_secret=revalidate_secret_not_secure_used_only_locally
                  nextauth_secret=next_auth_secret_not_secure_used_only_locally
                  echo "export NEXT_PUBLIC_DRUPAL_BASE_URL=${drupal_public_base_url}" >> "$BASH_ENV"
                  echo "export NEXT_IMAGE_DOMAIN=${drupal_domain}" >> "$BASH_ENV"
                  echo "export DRUPAL_CLIENT_SECRET=${drupal_client_secret}" >> "$BASH_ENV"
                  echo "export DRUPAL_CLIENT_ID=${drupal_client_id}" >> "$BASH_ENV"
                  echo "export NEXTAUTH_SECRET=${nextauth_secret}" >> "$BASH_ENV"
                  echo "export NEXT_PUBLIC_FRONTEND_URL=${next_public_base_url}" >> "$BASH_ENV"
                  echo "export DRUPAL_REVALIDATE_SECRET=${drupal_revalidate_secret}" >> "$BASH_ENV"
                  escaped_drupal_public_base_url=$(printf '%s\n' "$drupal_public_base_url" | sed -e 's/[\/&]/\\&/g')
                  escaped_next_public_base_url=$(printf '%s\n' "$next_public_base_url" | sed -e 's/[\/&]/\\&/g')
                  escaped_drupal_client_secret=$(printf '%s\n' "$drupal_client_secret" | sed -e 's/[\/&]/\\&/g')
                  escaped_drupal_revalidate_secret=$(printf '%s\n' "$drupal_revalidate_secret" | sed -e 's/[\/&]/\\&/g')
                  escaped_nextauth_secret=$(printf '%s\n' "$nextauth_secret" | sed -e 's/[\/&]/\\&/g')
                  sed -i -e "s/<|next_public_base_url|>/$escaped_next_public_base_url/" silta/silta-next.yml
                  sed -i -e "s/<|drupal_public_base_url|>/$escaped_drupal_public_base_url/" silta/silta-next.yml
                  sed -i -e "s/<|next_image_domain|>/$drupal_domain/" silta/silta-next.yml
                  sed -i -e "s/<|drupal_client_secret|>/$escaped_drupal_client_secret/" silta/silta-next.yml
                  sed -i -e "s/<|drupal_revalidate_secret|>/$escaped_drupal_revalidate_secret/" silta/silta-next.yml
                  sed -i -e "s/<|nextauth_secret|>/$escaped_nextauth_secret/" silta/silta-next.yml
                  sed -i -e "s/<|nextauth_url|>/$escaped_next_public_base_url/" silta/silta-next.yml
                  sed -i -e "s/<|next_public_frontend_url|>/$escaped_next_public_base_url/" silta/silta-next.yml
            # uses local custom command instead of silta/npm-install-build until SLT-847 is implemented
            - npm-install-build:
                path: next

          filters:
            branches:
              only: main
          requires: [ Drupal build & deploy main ]

      - silta/frontend-build-deploy:
          # Extend the build-deploy configuration for the production environment.
          <<: *frontend-build-deploy
          name: Next build & deploy production
          context: silta_finland
          silta_config: silta/silta-next.yml,silta/silta-next-prod.yml
          filters:
            branches:
              only: production
          requires: [ Drupal build & deploy production ]

        # Special rules for the dependabot branches.
      - silta/frontend-build-deploy:
          <<: *frontend-build-deploy
          name: Next Build Dependabot
          context: silta_dev
          skip-deployment: true
          filters:
            branches:
              only: /dependabot\/.*/
